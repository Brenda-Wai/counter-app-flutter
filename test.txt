#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/netfilter.h>
#include <linux/netfilter_ipv4.h>
#include <linux/netdevice.h>
#include <linux/string.h>

static char *iface = "eth0";  // Interface par défaut
module_param(iface, charp, 0644);
MODULE_PARM_DESC(iface, "Nom de l'interface réseau à surveiller");

static struct nf_hook_ops nfho_rx, nfho_tx;
static unsigned long rx_packets = 0, tx_packets = 0;

// Fonction pour le trafic entrant (hook en PRÉ-ROUTAGE)
static unsigned int net_hook_rx(void *priv,
                                struct sk_buff *skb,
                                const struct nf_hook_state *state)
{
    if (skb && skb->dev && strcmp(skb->dev->name, iface) == 0) {
        rx_packets++;
    }
    return NF_ACCEPT;
}

// Fonction pour le trafic sortant (hook en POST-ROUTAGE)
static unsigned int net_hook_tx(void *priv,
                                struct sk_buff *skb,
                                const struct nf_hook_state *state)
{
    if (skb && skb->dev && strcmp(skb->dev->name, iface) == 0) {
        tx_packets++;
    }
    return NF_ACCEPT;
}

static int __init netmon_init(void)
{
    // Configuration du hook pour les paquets entrants (PRÉ-ROUTAGE)
    nfho_rx.hook = net_hook_rx;
    nfho_rx.hooknum = NF_INET_PRE_ROUTING;
    nfho_rx.pf = PF_INET;
    nfho_rx.priority = NF_IP_PRI_FIRST;

    // Configuration du hook pour les paquets sortants (POST-ROUTAGE)
    nfho_tx.hook = net_hook_tx;
    nfho_tx.hooknum = NF_INET_POST_ROUTING;
    nfho_tx.pf = PF_INET;
    nfho_tx.priority = NF_IP_PRI_FIRST;

    // Enregistrement des hooks
    if (nf_register_net_hook(&init_net, &nfho_rx) ||
        nf_register_net_hook(&init_net, &nfho_tx)) {
        pr_err("Échec de l'enregistrement des hooks Netfilter\n");
        return -1;
    }

    pr_info("Module Netfilter chargé pour %s\n", iface);
    return 0;
}

static void __exit netmon_exit(void)
{
    nf_unregister_net_hook(&init_net, &nfho_rx);
    nf_unregister_net_hook(&init_net, &nfho_tx);

    pr_info("Interface %s - RX: %lu paquets | TX: %lu paquets\n",
            iface, rx_packets, tx_packets);
    pr_info("Module Netfilter déchargé\n");
}

module_init(netmon_init);
module_exit(netmon_exit);

MODULE_LICENSE("GPL");
MODULE_AUTHOR("Vous");
MODULE_DESCRIPTION("Module Netfilter pour comptage des paquets réseau");
